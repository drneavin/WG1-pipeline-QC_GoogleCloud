#!/usr/local/envs/py36/bin python3

import os
import sys
import pandas as pd
from glob import glob


# Extract variables from configuration file for use within the rest of the pipeline
input_dict = config["inputs"]
output_dict = config["outputs"]
options_dict = config["options"]
ref_dict = config["refs"]
plink_gender_ancestry_QC_dict = config["plink_gender_ancestry_QC"]
grm_QC_dict = config["grm_QC"]
HRC_check_dict = config["HRC_check"]
final_vcf_dict = config["final_vcf"]


# Import individual rules
include: "includes/plink_gender_ancestry_QC.smk"
include: "includes/grm_QC.smk"
include: "includes/HRC_check.smk"
include: "includes/final_vcf.smk"


## Define the chromosomes to be used downstream (post-gcta)
chromosomes = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]


plinkQC_files = []
grm_files = []
vcf_files = []
if os.path.exists(output_dict["output_dir"] + "/pca_sex_checks/ancestry_update_remove.tsv") and os.path.exists(output_dict["output_dir"] + "/pca_sex_checks/check_sex_update_remove.tsv"):
    ancestry_check = pd.read_csv(output_dict["output_dir"] + "/pca_sex_checks/ancestry_update_remove.tsv", sep = "\t")
    sex_check = pd.read_csv(output_dict["output_dir"] + "/pca_sex_checks/check_sex_update_remove.tsv", sep = "\t")
    if ancestry_check["UPDATE/REMOVE/KEEP"].count() == len(ancestry_check) and sex_check["UPDATE/REMOVE/KEEP"].count() == len(sex_check):
        plinkQC_files.append(output_dict["output_dir"] + "/update_sex_ancestry/update_sex.pgen")
        if os.path.exists(output_dict["output_dir"] + "/update_sex_ancestry/uniq_acestries.tsv"):
            ancestry_file = pd.read_csv(output_dict["output_dir"] + "/update_sex_ancestry/uniq_acestries.tsv", sep = "\t", header = None, names = ["Ancestry"])
            grm_files.append(expand(output_dict["output_dir"] + "/grm/{ancestry}_paired_relatedness.tsv", ancestry = ancestry_file["Ancestry"]))
            plinkQC_files.append(expand(output_dict["output_dir"] + "/convert_files/{ancestry}/{ancestry}_strand_check-updated-chr{chr}.pvar.temp", ancestry = ancestry_file["Ancestry"], chr = chromosomes))
            vcf_files.append(expand(output_dict["output_dir"] + "/vcf/combined_sorted/QC_filtered_sorted_chr{chr}.vcf.gz", chr = chromosomes))
            vcf_files.append(output_dict["output_dir"] + "/vcf/files4submission/QC_filtered_sorted_chr_updated.vcf.gz")
            vcf_files.append(output_dict["output_dir"] + "/vcf/files4submission/individual_sexes.tsv")
else:
    plinkQC_files.append(output_dict["output_dir"] + "/pca_sex_checks/ancestry_update_remove.tsv")

rule all:
    input:
        plinkQC_files,
        grm_files,
        vcf_files




