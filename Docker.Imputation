
################## BASE IMAGE ######################

FROM bitnami/minideb:bullseye

################## METADATA ######################

LABEL base_image="bitnami/minideb:bullseye"
LABEL version="1.0.0"
LABEL software="WG1 Demultiplexing Pipeline"
LABEL about.summary="WG1 sceQTLGen Consortium Imputation Pipeline"
LABEL about.documentation="https://demultiplexing-doublet-detecting-docs.readthedocs.io/en/latest/"
LABEL about.tags="Genomics"

################## MAINTAINER ######################

MAINTAINER Drew Neavin <d.neavin@garvan.org.au>

################## INSTALLATION ######################

ADD . /tmp/repo
WORKDIR /tmp/repo
ENV PATH=/opt/plink2:/opt/plink:/opt:/usr/games:/opt/conda/envs/snakemake/bin:/opt/conda/bin:/opt/ancestry_viz:/opt/Eagle_v2.4.1:/opt/bin:/opt/GenotypeHarmonizer-1.4.23:/opt/picard/build/libs:$PATH
ENV SHELL=/bin/bash
ENV LC_ALL=C 
ENV LANG=C.UTF-8



#!/bin/bash
RUN eval "$(command conda 'shell.bash' 'hook' 2> /dev/null)"

RUN PATH=/opt/conda/bin/:$PATH

RUN HOME=/root ## Needed for rust to behave correctly
RUN apt update
RUN yes | apt upgrade
RUN yes | apt-get install build-essential
RUN apt-get install -y --no-install-recommends apt-utils
RUN gcc --version
RUN yes | apt-get install wget
RUN yes | apt-get install curl
RUN apt install -y dirmngr --install-recommends
RUN apt install -y software-properties-common
RUN apt install -y apt-transport-https
RUN apt-get update && apt upgrade
RUN apt install -y ca-certificates gnupg2
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-key '95C0FAF38DB3CCAD0C080A7BDC78B2DDEABC47B7'
RUN add-apt-repository 'deb http://cloud.r-project.org/bin/linux/debian bullseye-cran40/'
RUN apt --fix-broken install
RUN apt-get update && apt upgrade
RUN cat /etc/apt/sources.list
RUN apt install -y -t bullseye-cran40 r-base
RUN apt install -y r-base-dev
RUN apt install -y r-cran-devtools
RUN apt-get update
RUN apt-get install -y libv8-dev
RUN apt-get update
RUN apt install -y ncdu
RUN add-apt-repository 'deb http://deb.debian.org/debian buster-backports main'
#RUN apt-get -y update && apt upgrade
RUN apt-get install -y autoconf automake gdb libffi-dev zlib1g-dev libssl-dev git
RUN apt install -y libcurl4-gnutls-dev libxml2-dev
RUN apt-get -y install cmake && \
    cmake --version
RUN apt install -y default-jre
RUN apt install -y default-jdk
RUN update-alternatives --config javac


# RUN ln -s /usr/lib/x86_64-linux-gnu/libffi.so.7 /usr/lib/x86_64-linux-gnu/libffi.so.6

RUN ldconfig

RUN add-apt-repository 'deb http://security.debian.org/debian-security jessie/updates main'
RUN apt-get update -y && apt-get install -y --no-install-recommends libssl1.0.0



RUN /bin/bash -c "curl -L https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh > mambaforge.sh && \
    bash mambaforge.sh -b -p /opt/conda && \
    conda config --system --set channel_priority strict && \
    rm mambaforge.sh"
RUN /bin/bash -c "mamba create -q -y -c conda-forge -c bioconda -c anaconda -n snakemake snakemake snakemake-minimal python==3.10.6 && \
    source activate snakemake && \
    mamba install -q -y -c conda-forge singularity && \
    conda clean --all -y && \
    which python && \
    pip install google-cloud"
RUN echo "source activate snakemake" > ~/.bashrc

RUN apt-get install apt-transport-https ca-certificates gnupg && \
    cd /opt

RUN echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg  add - && apt-get update -y && apt-get install google-cloud-cli -y
      
RUN gcloud init

RUN conda init bash && \ 
    eval "$(conda shell.bash hook)" && \ 
    conda activate snakemake

RUN which snakemake


RUN yes | apt-get install libncurses5-dev
RUN yes | apt-get install libbz2-dev
RUN yes | apt-get install liblzma-dev
RUN yes | apt-get install zlib1g
RUN yes | apt-get install zlib1g-dev
RUN apt-get install -y pkg-config
RUN apt-get install -y libcurl4-openssl-dev
RUN apt-get install -y graphviz
RUN apt-get install -y graphviz-dev
RUN apt-get install -y libxml2
RUN apt-get install -y libxml2-dev
RUN apt-get install -y bzip2
RUN apt-get install -y libssl-dev
RUN apt-get install -y devscripts
RUN apt-get install -y tabix
RUN apt-get install -y libcairo2-dev ## for complex heatmap
RUN apt-get install -y libgmp-dev
RUN apt-get install -y libgtk2.0-dev
RUN apt-get install -y xvfb
RUN apt-get install -y xauth
RUN apt-get install -y xfonts-base
RUN apt-get install -y libxt-dev
RUN apt-get install -y eigensoft


# RUN conda config --append channels conda-forge && \
#     yes | /opt/conda/bin/conda create -n py36 -c anaconda python=3.8 && \ 
#     yes | apt-get install git  && \ 
#     /opt/conda/bin/conda init bash && \ 
#     eval "$(conda shell.bash hook)" && \ 
#     conda activate py36 

RUN yes | /opt/conda/envs/snakemake/bin/pip install setuptools==57.5.0 && \
    /opt/conda/envs/snakemake/bin/pip install numpy && \
    /opt/conda/envs/snakemake/bin/pip install scipy && \
    /opt/conda/envs/snakemake/bin/pip install pyfaidx && \
    /opt/conda/envs/snakemake/bin/pip install scikit-learn && \
    /opt/conda/envs/snakemake/bin/pip install pandas && \
    /opt/conda/envs/snakemake/bin/pip install matplotlib && \
    /opt/conda/envs/snakemake/bin/pip install docopt && \
    /opt/conda/envs/snakemake/bin/pip install altair && \
    /opt/conda/envs/snakemake/bin/pip install CrossMap && \
    /opt/conda/envs/snakemake/bin/pip install cget && \
    /opt/conda/envs/snakemake/bin/pip install ugtm
#    /opt/conda/envs/snakemake/bin/pip install snpflip

# RUN yes | conda install -c bioconda csvtk


RUN R --slave -e 'install.packages("tidyverse", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("data.table", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("RColorBrewer", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("ggpubr", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("magrittr", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("cluster", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("cowplot", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("caret", repos = "http://cran.us.r-project.org")'



RUN cd /opt && \
    wget https://www.dropbox.com/s/xso2vt3p9h2rh8m/1000G.tar.gz && \
    tar -xzf 1000G.tar.gz

RUN cd /opt && \
    wget https://www.dropbox.com/s/uy9828g1r1jt5xy/ImputationTestDataset_plink.tar.gz && \
    tar -xzf ImputationTestDataset_plink.tar.gz

RUN cd /opt && \
    wget https://www.dropbox.com/s/u8haw4n5t3b8b34/GRCh37_to_GRCh38.chain

RUN cd /opt && \
    wget https://alkesgroup.broadinstitute.org/Eagle/downloads/Eagle_v2.4.1.tar.gz && \
    tar -xzf Eagle_v2.4.1.tar.gz


RUN cd /opt && \
    git clone https://github.com/vcftools/vcftools.git && \
    cd vcftools && \
        ./autogen.sh && \
        ./configure && \
        make && \
        make install
        
RUN cd /opt && \
    wget https://github.com/samtools/htslib/releases/download/1.10.2/htslib-1.10.2.tar.bz2 && \
    tar xvfj htslib-1.10.2.tar.bz2 && \
    cd htslib-1.10.2 && \
    ./configure && \
    make && \
    make install

RUN cd /opt && \
    wget https://github.com/samtools/bcftools/releases/download/1.10.2/bcftools-1.10.2.tar.bz2 && \
    tar xvfj bcftools-1.10.2.tar.bz2 && \
    rm bcftools-1.10.2.tar.bz2 && \
    cd bcftools-1.10.2 && \
    ./configure && \
    make && \
    make install

RUN cd /opt && \
    mkdir plink && \
    cd plink && \
        wget https://s3.amazonaws.com/plink1-assets/plink_linux_x86_64_20210606.zip && \
        unzip plink_linux_x86_64_20210606.zip

RUN cd /opt && \
    mkdir plink2 && \
    cd plink2 && \
        wget https://s3.amazonaws.com/plink2-assets/alpha3/plink2_linux_x86_64_20220814.zip && \
        unzip plink2_linux_x86_64_20220814.zip


RUN cd /opt && \
    git clone https://github.com/broadinstitute/picard.git && \
    cd picard/ && \
    ./gradlew shadowJar

RUN cd /opt && \
    git clone --single-branch --branch v1.0.2 https://github.com/sc-eQTLgen-consortium/WG1-pipeline-QC.git


RUN cd /opt && \
    wget https://www.dropbox.com/s/fvd4pl8no3ngg0l/hg38exonsUCSC.bed


RUN cd /opt && \
		wget https://github.com/molgenis/systemsgenetics/releases/download/1.4.0_20-8.1/GenotypeHarmonizer-1.4.23-dist.tar.gz && \
		tar -xzf GenotypeHarmonizer-1.4.23-dist.tar.gz && \
        chmod 777 /opt/GenotypeHarmonizer-1.4.23/GenotypeHarmonizer.sh


RUN cd /opt && \
    wget https://github.com/statgen/Minimac4/releases/download/v1.0.2/minimac4-1.0.2-Linux.sh && \
    bash minimac4-1.0.2-Linux.sh --skip-license TRUE

RUN conda clean --all

RUN rm /opt/1000G.tar.gz && \
    rm /opt/Eagle_v2.4.1.tar.gz && \
    rm /opt/GenotypeHarmonizer-1.4.23-dist.tar.gz && \
    rm /opt/ImputationTestDataset_plink.tar.gz && \
    rm /opt/htslib-1.10.2.tar.bz2 && \
    rm -rf /opt/WG1-pipeline-QC/Demultiplexing