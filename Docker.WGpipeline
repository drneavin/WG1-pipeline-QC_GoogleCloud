
################## BASE IMAGE ######################

FROM bitnami/minideb:bullseye

################## METADATA ######################

LABEL base_image="bitnami/minideb:bullseye"
LABEL version="1.0.1"
LABEL software="WG1 Demultiplexing Pipeline"
LABEL about.summary="WG1 sceQTLGen Consortium Demultiplexing Pipeline"
LABEL about.documentation="https://demultiplexing-doublet-detecting-docs.readthedocs.io/en/latest/"
LABEL about.tags="Genomics"

################## MAINTAINER ######################

MAINTAINER Drew Neavin <d.neavin@garvan.org.au>

################## INSTALLATION ######################

ADD . /tmp/repo
WORKDIR /tmp/repo
# ENV PATH=/opt/DoubletDetection/:/opt/popscle/bin/:/opt/souporcell:/opt:/opt/conda/envs/snakemake/bin:/opt/bedtools2/bin:/opt/conda/bin:${PATH}
ENV PATH=/opt/DoubletDetection/:/opt/popscle/bin/:/opt/souporcell:/opt:/opt/bedtools2/bin:/opt/conda/envs/snakemake/bin:/opt/conda/bin/:/opt/minimap2-2.7/:/opt/freebayes/:/opt/vartrix-v1.1.3-x86_64-linux/:/opt/bcftools-1.10.2:${PATH}
ENV SHELL=/bin/bash
# ENV PYTHONPATH=/opt/conda/envs/snakemake/lib/python3.10/site-packages/ 
ENV LC_ALL=C 
ENV LANG=C.UTF-8


#!/bin/bash
RUN eval "$(command conda 'shell.bash' 'hook' 2> /dev/null)"

RUN PATH=/opt/conda/bin/:$PATH

RUN HOME=/root ## Needed for rust to behave correctly
RUN apt update
RUN yes | apt upgrade
RUN yes | apt-get install build-essential
RUN apt-get install -y --no-install-recommends apt-utils
RUN gcc --version
RUN yes | apt-get install wget
RUN yes | apt-get install curl
RUN apt install -y dirmngr --install-recommends
RUN apt install -y software-properties-common
RUN apt install -y apt-transport-https
RUN apt-get update && apt upgrade
RUN apt install -y ca-certificates gnupg2
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-key '95C0FAF38DB3CCAD0C080A7BDC78B2DDEABC47B7'
RUN add-apt-repository 'deb http://cloud.r-project.org/bin/linux/debian bullseye-cran40/'
RUN apt --fix-broken install
RUN apt-get update && apt upgrade
RUN cat /etc/apt/sources.list
RUN apt install -y -t bullseye-cran40 r-base
RUN apt install -y r-base-dev
RUN apt install -y r-cran-devtools
RUN apt install -y r-cran-seurat
RUN apt-get update
RUN apt-get install -y libv8-dev
RUN apt-get update
RUN apt install -y ncdu
RUN add-apt-repository 'deb http://deb.debian.org/debian buster-backports main'
#RUN apt-get -y update && apt upgrade
RUN apt-get install -y autoconf automake gdb libffi-dev zlib1g-dev libssl-dev git
RUN apt install -y libcurl4-gnutls-dev libxml2-dev
RUN apt-get -y install cmake && \
    cmake --version
# RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys FCAE110B1118213C
# RUN add-apt-repository ppa:graphics-drivers/ppa
# RUN apt update
# RUN apt install nvidia-390
# RUN yes | apt install nvidia-cuda-toolkit

RUN find /usr/lib -name "libffi.so*"
RUN ln -s /usr/lib/x86_64-linux-gnu/libffi.so.7 /usr/lib/x86_64-linux-gnu/libffi.so.6

RUN ldconfig

RUN add-apt-repository 'deb http://security.debian.org/debian-security jessie/updates main'
RUN apt-get update -y && apt-get install -y --no-install-recommends libssl1.0.0


RUN cd /opt && \
    wget https://github.com/lh3/minimap2/archive/v2.7.tar.gz && \
    tar -xzvf v2.7.tar.gz && \
    cd minimap2-2.7 && \
    make


RUN /bin/bash -c "curl -L https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh > mambaforge.sh && \
    bash mambaforge.sh -b -p /opt/conda && \
    conda config --system --set channel_priority strict && \
    rm mambaforge.sh"
RUN /bin/bash -c "mamba create -q -y -c conda-forge -c bioconda -c anaconda -n snakemake snakemake snakemake-minimal python==3.10.6 && \
    source activate snakemake && \
    mamba install -q -y -c conda-forge singularity && \
    conda clean --all -y && \
    which python && \
    pip install google-cloud"
RUN echo "source activate snakemake" > ~/.bashrc

RUN conda init bash && \ 
    eval "$(conda shell.bash hook)" && \ 
    conda activate snakemake

RUN which snakemake

## Make environment fo python 3.6.8 and install souporcell dependencies
# 3.6 is needed for pystan to work properly;

RUN conda config --append channels conda-forge && \
    yes | /opt/conda/bin/conda create -n py36 -c anaconda python=3.6.8 pytorch torchvision cudatoolkit -c pytorch && \ 
    yes | apt-get install git  && \ 
    /opt/conda/bin/conda init bash && \ 
    eval "$(conda shell.bash hook)" && \ 
    conda activate py36

# RUN conda install -c conda-forge cudatoolkit=11.2 cudnn=8.1.0
# RUN conda install -c conda-forge cudatoolkit
# RUN /opt/conda/bin/conda install -c anaconda tensorflow-gpu
# RUN /opt/conda/bin/conda install pytorch torchvision cudatoolkit=10.1 -c pytorch

RUN /opt/conda/envs/py36/bin/pip install setuptools==57.5.0 && \ 
    yes | /opt/conda/envs/py36/bin/pip install pysam && \ 
    yes | /opt/conda/envs/py36/bin/pip install pyvcf && \ 
    yes | /opt/conda/envs/py36/bin/pip install numpy && \ 
    yes | /opt/conda/envs/py36/bin/pip install scipy && \ 
    yes | /opt/conda/envs/py36/bin/pip install pystan==2.17.1.0 && \ 
    yes | /opt/conda/envs/py36/bin/pip install pyfaidx && \ 
    yes | /opt/conda/envs/py36/bin/pip install tensorflow ## required for souporcell

RUN conda init bash && \ 
    eval "$(conda shell.bash hook)" && \ 
    conda activate snakemake

RUN yes | apt-get install libncurses5-dev
RUN yes | apt-get install libbz2-dev
RUN yes | apt-get install liblzma-dev
RUN yes | apt-get install zlib1g
RUN yes | apt-get install zlib1g-dev
RUN apt-get install -y pkg-config
RUN apt-get install -y libcurl4-openssl-dev
RUN apt-get install -y graphviz
RUN apt-get install -y graphviz-dev
RUN apt-get install -y libxml2
RUN apt-get install -y libxml2-dev
RUN apt-get install -y bzip2
RUN apt-get install -y libssl-dev
RUN apt-get install -y devscripts
RUN apt-get install -y tabix
RUN apt-get install -y libcairo2-dev ## for complex heatmap
RUN apt-get install -y libgmp-dev
RUN apt-get install -y libgtk2.0-dev
RUN apt-get install -y xvfb
RUN apt-get install -y xauth
RUN apt-get install -y xfonts-base
RUN apt-get install -y libxt-dev

RUN R --slave -e 'install.packages("V8", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("rversions", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("tidyverse", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("data.table", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("Seurat", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("remotes", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("xgboost", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("vcfR", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("BiocManager")'
RUN R --slave -e 'BiocManager::install("scds")'
RUN R --slave -e 'BiocManager::install("clusterProfiler")'
RUN R --slave -e 'install.packages("MCL", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'BiocManager::install("mygene")'
RUN R --slave -e 'install.packages("R.utils", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("foreach", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("doParallel", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("locfit", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("ggplot2", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("ggpubr", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("ggnewscale", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("RColorBrewer", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'install.packages("lsa", repos = "http://cran.us.r-project.org")'
RUN R --slave -e 'BiocManager::install("ComplexHeatmap")'
        



RUN yes | /opt/conda/envs/snakemake/bin/pip install setuptools==57.5.0 && \
    yes | /opt/conda/envs/snakemake/bin/pip install pysam && \
    /opt/conda/envs/snakemake/bin/pip install pyvcf && \
    /opt/conda/envs/snakemake/bin/pip install numpy && \
    /opt/conda/envs/snakemake/bin/pip install scipy && \
    /opt/conda/envs/snakemake/bin/pip install pyfaidx && \
    /opt/conda/envs/snakemake/bin/pip install scikit-learn && \
    /opt/conda/envs/snakemake/bin/pip install pandas && \
    /opt/conda/envs/snakemake/bin/pip install matplotlib==3.2.2 && \
    /opt/conda/envs/snakemake/bin/pip install scikit-image && \
    /opt/conda/envs/snakemake/bin/pip install numba==0.56.3 && \
    /opt/conda/envs/snakemake/bin/pip install annoy && \
    /opt/conda/envs/snakemake/bin/pip install umap-learn && \
    /opt/conda/envs/snakemake/bin/pip install scrublet && \
    /opt/conda/envs/snakemake/bin/pip install h5py



RUN mkdir -p /usr/share/man/man1
RUN yes | apt-get install -y python3-tk
RUN apt-get install -y openjdk-11-jdk
RUN java -version


RUN cd /opt && \
    wget https://www.dropbox.com/s/m8u61jn4i1mcktp/TestData4PipelineSmall.tar.gz

RUN cd /opt && \
    git clone https://github.com/JonathanShor/DoubletDetection.git && \
    cd DoubletDetection && \
    /opt/conda/envs/snakemake/bin/pip install .


RUN cd /opt && \
    wget https://github.com/arq5x/bedtools2/releases/download/v2.29.1/bedtools-2.29.1.tar.gz && \
    tar -zxvf bedtools-2.29.1.tar.gz && \
    cd bedtools2 && \
    make

RUN HOME=/root && \
    cd /opt && \
    CARGO_HOME=/opt/.cargo RUSTUP_HOME=/opt/.cargo bash -c 'curl https://sh.rustup.rs -sSf | sh -s -- -y' && \
    . /opt/.cargo/env && \
    which cargo && \
    rustup default stable && \
    yes | apt-get install git && \

cd /opt && \
    git clone https://github.com/wheaton5/souporcell.git && \
        cd souporcell/troublet && \
        cargo build --release && \
        cd /opt/souporcell/souporcell && \
        cargo build --release

### Update python to call for souporcell files
RUN sed -i 's|#!/usr/bin/env python|#!/opt/conda/envs/py36/bin/python|g' /opt/souporcell/*.py && \
	sed -i '1i #!/opt/conda/envs/py36/bin/python'  /opt/souporcell/check_modules.py && \
	sed -i '2i import sys' /opt/souporcell/*.py && \
	sed -i "3i sys.path.insert(0,'/opt/conda/envs/py36/lib/python3.6/site-packages')" /opt/souporcell/*.py 




RUN cd /opt && \
    wget https://github.com/10XGenomics/vartrix/releases/download/v1.1.3/vartrix-v1.1.3-x86_64-linux.tar.gz && \
        tar xzvf vartrix-v1.1.3-x86_64-linux.tar.gz && \
        rm vartrix-v1.1.3-x86_64-linux.tar.gz && \
        export PATH=/opt/vartrix-v1.1.3-x86_64-linux:$PATH

RUN cd /opt && \
    wget https://github.com/samtools/htslib/releases/download/1.10.2/htslib-1.10.2.tar.bz2 && \
    tar xvfj htslib-1.10.2.tar.bz2 && \
    cd htslib-1.10.2 && \
    ./configure && \
    make && \
    make install

RUN cd /opt && \
    git clone https://github.com/drneavin/WG1-pipeline-QC_GoogleCloud.git

RUN cd /opt && \
    wget https://github.com/samtools/samtools/releases/download/1.10/samtools-1.10.tar.bz2 && \
    tar xvfj samtools-1.10.tar.bz2 && \
    rm samtools-1.10.tar.bz2 && \
    cd samtools-1.10 && \
    ./configure && \
    make && \
    make install

RUN cd /opt && \
    wget https://github.com/samtools/bcftools/releases/download/1.10.2/bcftools-1.10.2.tar.bz2 && \
    tar xvfj bcftools-1.10.2.tar.bz2 && \
    rm bcftools-1.10.2.tar.bz2 && \
    cd bcftools-1.10.2 && \
    ./configure && \
    make && \
    make install


RUN cd /opt && \
    git clone https://github.com/ekg/freebayes.git && \
    wget https://github.com/ekg/freebayes/releases/download/v1.3.1/freebayes-v1.3.1 && \
    mv freebayes-v1.3.1 freebayes/freebayes && \
    chmod 777 freebayes/freebayes

RUN cd /opt && \
    wget http://ftp.gnu.org/gnu/parallel/parallel-latest.tar.bz2 && \
    tar xjf parallel-latest.tar.bz2 && \
    cd parallel-* && \
    ./configure && \
    make && \
    yes | make install


RUN cd /opt && \
    git clone https://github.com/statgen/popscle.git && \
    cd popscle && \
    # sed -i 's/set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -pthread")/set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -pthread --std=c++11")/g' CMakeLists.txt && \
    cat CMakeLists.txt && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make

RUN echo 'alias popscle=/opt/popscle/bin/popscle' >> ~/.bashrc



# RUN sed -i 's/louvain.set_rng_seed(random_state)/partition_kwargs["seed"] = random_state/g'  /opt/conda/envs/snakemake/lib/python3.6/site-packages/scanpy/tools/_louvain.py



### Make scripts executable ###
RUN chmod 777 -R /opt/WG1-pipeline-QC_GoogleCloud/Demultiplexing/scripts
RUN rm -rf /opt/WG1-pipeline-QC_GoogleCloud/Imputation/



### Remove unnecessary files ###
RUN cd /opt && \
    rm bedtools-2.29.1.tar.gz && \
    rm htslib-1.10.2.tar.bz2 && \
    rm parallel-latest.tar.bz2

RUN conda clean --all 

